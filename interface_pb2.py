# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: interface.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='interface.proto',
  package='dan',
  syntax='proto3',
  serialized_options=b'\242\002\003DAN',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x0finterface.proto\x12\x03\x64\x61n\"\x06\n\x04Void\"\xf0\x04\n\x04\x43ode\x12\x1d\n\x03msg\x18\x01 \x01(\x0e\x32\x10.dan.Code.Status\"\xc8\x04\n\x06Status\x12\x06\n\x02OK\x10\x00\x12\x18\n\x14NODE_REIGISTER_ERROR\x10\x01\x12\x16\n\x12INVALID_TABLE_TYPE\x10\x02\x12\x16\n\x12\x43REATE_TABLE_ERROR\x10\x03\x12\x14\n\x10\x44ROP_TABLE_ERROR\x10\x04\x12\x19\n\x15\x44UPLICATED_TABLE_NAME\x10\x05\x12\x13\n\x0fTABLE_NOT_FOUND\x10\x06\x12\x16\n\x12\x43REATE_INDEX_ERROR\x10\x07\x12\x19\n\x15TABLE_PARTITION_ERROR\x10\x08\x12\x1d\n\x19TABLE_ALREADY_PARTITIONED\x10\t\x12\x17\n\x13INSERT_RECORD_ERROR\x10\n\x12\x14\n\x10TABLE_SCAN_ERROR\x10\x0b\x12\x16\n\x12\x43REATE_GRAPH_ERROR\x10\x0c\x12\x14\n\x10\x44ROP_GRAPH_ERROR\x10\r\x12\x19\n\x15\x44UPLICATED_GRAPH_NAME\x10\x0e\x12\x13\n\x0fGRAPH_NOT_FOUND\x10\x0f\x12\x19\n\x15GRAPH_PARTITION_ERROR\x10\x10\x12\x1b\n\x17GRAPH_ALREADY_PARTIONED\x10\x11\x12\x17\n\x13INSERT_VERTEX_ERROR\x10\x12\x12\x15\n\x11INSERT_EDGE_ERROR\x10\x13\x12\x17\n\x13\x41\x44JACENT_LIST_ERROR\x10\x14\x12\x14\n\x10GET_VERTEX_ERROR\x10\x15\x12\x1a\n\x16INVALID_PARTITION_TYPE\x10\x16\x12\x14\n\x10OBJECT_NOT_FOUND\x10\x17\"\x17\n\nDoubleList\x12\t\n\x01v\x18\x01 \x03(\x01\x32_\n\x0c\x44\x41NInterface\x12\x1e\n\x04ping\x12\t.dan.Void\x1a\t.dan.Code\"\x00\x12/\n\ttest_size\x12\x0f.dan.DoubleList\x1a\x0f.dan.DoubleList\"\x00\x42\x06\xa2\x02\x03\x44\x41Nb\x06proto3'
)



_CODE_STATUS = _descriptor.EnumDescriptor(
  name='Status',
  full_name='dan.Code.Status',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='OK', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='NODE_REIGISTER_ERROR', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='INVALID_TABLE_TYPE', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='CREATE_TABLE_ERROR', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='DROP_TABLE_ERROR', index=4, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='DUPLICATED_TABLE_NAME', index=5, number=5,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='TABLE_NOT_FOUND', index=6, number=6,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='CREATE_INDEX_ERROR', index=7, number=7,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='TABLE_PARTITION_ERROR', index=8, number=8,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='TABLE_ALREADY_PARTITIONED', index=9, number=9,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='INSERT_RECORD_ERROR', index=10, number=10,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='TABLE_SCAN_ERROR', index=11, number=11,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='CREATE_GRAPH_ERROR', index=12, number=12,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='DROP_GRAPH_ERROR', index=13, number=13,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='DUPLICATED_GRAPH_NAME', index=14, number=14,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='GRAPH_NOT_FOUND', index=15, number=15,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='GRAPH_PARTITION_ERROR', index=16, number=16,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='GRAPH_ALREADY_PARTIONED', index=17, number=17,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='INSERT_VERTEX_ERROR', index=18, number=18,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='INSERT_EDGE_ERROR', index=19, number=19,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ADJACENT_LIST_ERROR', index=20, number=20,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='GET_VERTEX_ERROR', index=21, number=21,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='INVALID_PARTITION_TYPE', index=22, number=22,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='OBJECT_NOT_FOUND', index=23, number=23,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=73,
  serialized_end=657,
)
_sym_db.RegisterEnumDescriptor(_CODE_STATUS)


_VOID = _descriptor.Descriptor(
  name='Void',
  full_name='dan.Void',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=24,
  serialized_end=30,
)


_CODE = _descriptor.Descriptor(
  name='Code',
  full_name='dan.Code',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='msg', full_name='dan.Code.msg', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _CODE_STATUS,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=33,
  serialized_end=657,
)


_DOUBLELIST = _descriptor.Descriptor(
  name='DoubleList',
  full_name='dan.DoubleList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='v', full_name='dan.DoubleList.v', index=0,
      number=1, type=1, cpp_type=5, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=659,
  serialized_end=682,
)

_CODE.fields_by_name['msg'].enum_type = _CODE_STATUS
_CODE_STATUS.containing_type = _CODE
DESCRIPTOR.message_types_by_name['Void'] = _VOID
DESCRIPTOR.message_types_by_name['Code'] = _CODE
DESCRIPTOR.message_types_by_name['DoubleList'] = _DOUBLELIST
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Void = _reflection.GeneratedProtocolMessageType('Void', (_message.Message,), {
  'DESCRIPTOR' : _VOID,
  '__module__' : 'interface_pb2'
  # @@protoc_insertion_point(class_scope:dan.Void)
  })
_sym_db.RegisterMessage(Void)

Code = _reflection.GeneratedProtocolMessageType('Code', (_message.Message,), {
  'DESCRIPTOR' : _CODE,
  '__module__' : 'interface_pb2'
  # @@protoc_insertion_point(class_scope:dan.Code)
  })
_sym_db.RegisterMessage(Code)

DoubleList = _reflection.GeneratedProtocolMessageType('DoubleList', (_message.Message,), {
  'DESCRIPTOR' : _DOUBLELIST,
  '__module__' : 'interface_pb2'
  # @@protoc_insertion_point(class_scope:dan.DoubleList)
  })
_sym_db.RegisterMessage(DoubleList)


DESCRIPTOR._options = None

_DANINTERFACE = _descriptor.ServiceDescriptor(
  name='DANInterface',
  full_name='dan.DANInterface',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=684,
  serialized_end=779,
  methods=[
  _descriptor.MethodDescriptor(
    name='ping',
    full_name='dan.DANInterface.ping',
    index=0,
    containing_service=None,
    input_type=_VOID,
    output_type=_CODE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='test_size',
    full_name='dan.DANInterface.test_size',
    index=1,
    containing_service=None,
    input_type=_DOUBLELIST,
    output_type=_DOUBLELIST,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_DANINTERFACE)

DESCRIPTOR.services_by_name['DANInterface'] = _DANINTERFACE

# @@protoc_insertion_point(module_scope)
